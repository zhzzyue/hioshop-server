{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/specification.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "indexAction",
        "model",
        "data",
        "where",
        "id",
        "select",
        "success",
        "getGoodsSpecAction",
        "post",
        "goods_id",
        "is_delete",
        "specData",
        "specification_id",
        "item",
        "goods_spec_id",
        "goods_specification_ids",
        "specValueData",
        "find",
        "value",
        "console",
        "log",
        "dataInfo",
        "specValue",
        "productUpdateAction",
        "goods_number",
        "goods_weight",
        "goods_sn",
        "retail_price",
        "cost",
        "updateInfo",
        "update",
        "idData",
        "field",
        "goods_specification_id",
        "info",
        "pro",
        "length",
        "goodsNum",
        "sum",
        "maxPrice",
        "max",
        "minPrice",
        "min",
        "maxCost",
        "minCost",
        "goodsPrice",
        "costPrice",
        "cost_price",
        "min_retail_price",
        "min_cost_price",
        "productDeleAction",
        "productId",
        "limit",
        "delete",
        "lastData",
        "delePrimarySpecAction",
        "detailAction",
        "addAction",
        "sort",
        "name",
        "sort_order",
        "add",
        "checkSnAction",
        "sn",
        "fail",
        "updateAction",
        "deleteAction",
        "goods_spec"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/specification.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nmodule.exports = class extends Base {\n    /**\n     * index action\n     * @return {Promise} []\n     */\n    async indexAction() {\n        const model = this.model('specification');\n        const data = await model.where({\n            id: ['>', 0]\n        }).select();\n        return this.success(data);\n    }\n    async getGoodsSpecAction() {\n        const id = this.post('id');\n        const model = this.model('product');\n        const data = await model.where({\n            goods_id: id,\n            is_delete: 0\n        }).select();\n        //TODO 这里只有一层，以后如果有多重型号，如一件商品既有颜色又有尺寸时，这里的代码是不对的。以后再写。\n        let specData = [];\n        let specification_id = 0;\n        for (const item of data) {\n            let goods_spec_id = item.goods_specification_ids;\n            let specValueData = await this.model('goods_specification').where({\n                id: goods_spec_id,\n                is_delete: 0\n            }).find();\n            specification_id = specValueData.specification_id;\n            item.value = specValueData.value;\n        }\n        console.log(data);\n        let dataInfo = {\n            specData: data,\n            specValue: specification_id\n        };\n        return this.success(dataInfo);\n    }\n    async productUpdateAction() {\n        const goods_number = this.post('goods_number');\n        const goods_weight = this.post('goods_weight');\n        const goods_sn = this.post('goods_sn');\n        const retail_price = this.post('retail_price');\n        const cost = this.post('cost');\n        const value = this.post('value');\n        let updateInfo = {\n            goods_number: goods_number,\n            goods_weight: goods_weight,\n            cost: cost,\n            retail_price: retail_price\n        }\n        await this.model('cart').where({\n            goods_sn: goods_sn\n        }).update({\n            retail_price: retail_price\n        });\n        const model = this.model('product');\n        await model.where({\n            goods_sn: goods_sn\n        }).update(updateInfo);\n        let idData = await model.where({\n            goods_sn: goods_sn\n        }).field('goods_specification_ids,goods_id').find();\n        let goods_specification_id = idData.goods_specification_ids\n        let info = await this.model('goods_specification').where({\n            id: goods_specification_id\n        }).update({\n            value: value\n        });\n        let goods_id = idData.goods_id;\n        // todo 价格显示为区间\n        let pro = await this.model('product').where({\n            goods_id: goods_id\n        }).select();\n        if (pro.length > 1) {\n            let goodsNum = await this.model('product').where({\n                goods_id: goods_id\n            }).sum('goods_number');\n            let maxPrice = await this.model('product').where({\n                goods_id: goods_id\n            }).max('retail_price');\n            let minPrice = await this.model('product').where({\n                goods_id: goods_id\n            }).min('retail_price');\n            let maxCost = await this.model('product').where({\n                goods_id: goods_id\n            }).max('cost');\n            let minCost = await this.model('product').where({\n                goods_id: goods_id\n            }).min('cost');\n            let goodsPrice = minPrice + '-' + maxPrice;\n            let costPrice = minCost + '-' + maxCost;\n            await this.model('goods').where({\n                id: goods_id\n            }).update({\n                goods_number: goodsNum,\n                retail_price: goodsPrice,\n                cost_price: costPrice,\n                min_retail_price: minPrice,\n                min_cost_price: minCost,\n            });\n        } else {\n            await this.model('goods').where({\n                id: goods_id\n            }).update({\n                goods_number: goods_number,\n                retail_price: retail_price,\n                cost_price: cost,\n                min_retail_price: retail_price,\n                min_cost_price: cost,\n            });\n        }\n        return this.success(info);\n    }\n    async productDeleAction() {\n        const productId = this.post('id');\n        const model = this.model('product');\n        let idData = await model.where({\n            id: productId\n        }).field('goods_specification_ids,goods_id').find();\n        let goods_specification_id = idData.goods_specification_ids;\n        let goods_id = idData.goods_id;\n        await model.where({\n            id: productId\n        }).limit(1).delete();\n        let info = await this.model('goods_specification').where({\n            id: goods_specification_id\n        }).limit(1).delete();\n        let lastData = await model.where({\n            goods_id: goods_id\n        }).select();\n        if (lastData.length != 0) {\n            let goodsNum = await this.model('product').where({\n                goods_id: goods_id\n            }).sum('goods_number');\n            let goodsPrice = await this.model('product').where({\n                goods_id: goods_id\n            }).min('retail_price');\n            await this.model('goods').where({\n                id: goods_id\n            }).update({\n                goods_number: goodsNum,\n                retail_price: goodsPrice\n            });\n        }\n        return this.success(info);\n    }\n    async delePrimarySpecAction() {\n        const goods_id = this.post('id');\n        const model = this.model('product');\n        await model.where({\n            goods_id: goods_id\n        }).delete();\n        let info = await this.model('goods_specification').where({\n            goods_id: goods_id\n        }).delete();\n        await this.model('goods').where({\n            id: goods_id\n        }).update({\n            goods_number: 0,\n            retail_price: 0\n        });\n        return this.success(info);\n    }\n    async detailAction(){\n        let id = this.post('id');\n        let info = await this.model('specification').where({\n            id:id\n        }).find();\n        return this.success(info);\n    }\n    async addAction() {\n        const value = this.post('name');\n        const sort = this.post('sort_order');\n        let info = {\n            name: value,\n            sort_order: sort\n        }\n        const model = this.model('specification');\n        const data = await model.add(info);\n        return this.success(data);\n    }\n    async checkSnAction() {\n        const sn = this.post('sn');\n        const model = this.model('product');\n        const data = await model.where({\n            goods_sn: sn\n        }).select();\n        if (data.length > 0) {\n            return this.fail('sn已存在');\n        } else {\n            return this.success(data);\n        }\n    }\n    async updateAction() {\n        const id = this.post('id');\n        const value = this.post('name');\n        const sort = this.post('sort_order');\n        let info = {\n            name: value,\n            sort_order: sort\n        }\n        const model = this.model('specification');\n        const data = await model.where({\n            id: id\n        }).update(info);\n        return this.success(data);\n    }\n    async deleteAction() {\n        const id = this.post('id');\n        const goods_spec = await this.model('goods_specification').where({\n            specification_id: id,\n            is_delete: 0\n        }).select();\n        console.log(goods_spec);\n        if (goods_spec.length > 0) {\n            return this.fail('该型号下有商品，暂不能删除')\n        } else {\n            const model = this.model('specification');\n            const data = await model.where({\n                id: id\n            }).limit(1).delete();\n            return this.success(data);\n        }\n    }\n};"
    ]
}