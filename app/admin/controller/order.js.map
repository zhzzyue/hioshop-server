{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/order.js"
    ],
    "names": [
        "Base",
        "require",
        "moment",
        "_",
        "module",
        "exports",
        "indexAction",
        "page",
        "get",
        "size",
        "orderSn",
        "consignee",
        "logistic_code",
        "status",
        "data",
        "model",
        "where",
        "order_sn",
        "order_status",
        "order_type",
        "order",
        "countSelect",
        "console",
        "log",
        "orderData",
        "find",
        "order_id",
        "id",
        "item",
        "goodsList",
        "field",
        "is_delete",
        "select",
        "goodsCount",
        "forEach",
        "v",
        "number",
        "user",
        "user_id",
        "think",
        "isEmpty",
        "nickname",
        "Buffer",
        "from",
        "toString",
        "userInfo",
        "province_name",
        "province",
        "getField",
        "city_name",
        "city",
        "district_name",
        "district",
        "full_region",
        "postscript",
        "add_time",
        "unix",
        "format",
        "pay_time",
        "order_status_text",
        "getOrderStatusText",
        "express",
        "expressInfo",
        "shipper_name",
        "success",
        "getAutoStatusAction",
        "info",
        "autoDelivery",
        "toDeliveryAction",
        "address",
        "button_text",
        "getOrderBtnText",
        "saveGoodsListAction",
        "post",
        "price",
        "addOrMinus",
        "changePrice",
        "Number",
        "decrement",
        "actual_price",
        "order_price",
        "goods_price",
        "generateOrderNumber",
        "update",
        "increment",
        "goodsListDeleteAction",
        "saveAdminMemoAction",
        "text",
        "admin_memo",
        "orderInfo",
        "goods",
        "order_goods",
        "product",
        "product_id",
        "name",
        "goods_name",
        "sku_id",
        "goods_sn",
        "amount",
        "retail_price",
        "qty",
        "outer_oi_id",
        "pic",
        "list_pic_url",
        "push",
        "savePrintInfoAction",
        "print_info",
        "saveExpressValueInfoAction",
        "express_value",
        "saveRemarkInfoAction",
        "remark",
        "detailAction",
        "_nickname",
        "user_name",
        "avatar",
        "allAddress",
        "shipping_time",
        "confirm_time",
        "dealdone_time",
        "def",
        "senderInfo",
        "receiveInfo",
        "mobile",
        "province_id",
        "city_id",
        "district_id",
        "Name",
        "Tel",
        "ProvinceName",
        "CityName",
        "ExpAreaName",
        "Address",
        "receiver",
        "sender",
        "getAllRegionAction",
        "aData",
        "type",
        "bData",
        "cData",
        "newData",
        "children",
        "bitem",
        "innerChildren",
        "citem",
        "parent_id",
        "value",
        "label",
        "orderpackAction",
        "orderReceiveAction",
        "currentTime",
        "parseInt",
        "Date",
        "getTime",
        "orderPriceAction",
        "goodsPrice",
        "freightPrice",
        "actualPrice",
        "freight_price",
        "getOrderExpressAction",
        "orderId",
        "latestExpressInfo",
        "getLatestOrderExpressByAli",
        "getPrintTestAction",
        "printExpress",
        "getMianExpressAction",
        "senderOptions",
        "receiveOptions",
        "receiverInfo",
        "expressType",
        "getMianExpress",
        "ResultCode",
        "orderExpressAdd",
        "rePrintExpressAction",
        "date",
        "getFullYear",
        "padStart",
        "getMonth",
        "getDay",
        "getHours",
        "getMinutes",
        "getSeconds",
        "random",
        "directPrintExpressAction",
        "express_type",
        "code",
        "MonthCode",
        "send_time",
        "ele",
        "Order",
        "ShipperCode",
        "LogisticCode",
        "region_code",
        "DestinatioCode",
        "MarkDestination",
        "kdInfo",
        "kdData",
        "shipper_id",
        "shipper_code",
        "add",
        "goDeliveryAction",
        "updateData",
        "print_status",
        "shipping_status",
        "formInfo",
        "formId",
        "form_id",
        "openId",
        "weixin_openid",
        "goodsInfo",
        "goodsName",
        "length",
        "shippingTime",
        "TEMPLATE_ID",
        "message",
        "tokenServer",
        "service",
        "token",
        "getAccessToken",
        "res",
        "sendMessage",
        "goPrintOnlyAction",
        "orderDeliveryAction",
        "method",
        "deliveryId",
        "expressName",
        "checkExpressAction",
        "fail",
        "saveAddressAction",
        "sn",
        "cAddress",
        "addOptions",
        "storeAction",
        "isPost",
        "values",
        "is_show",
        "is_new",
        "changeStatusAction",
        "destoryAction",
        "limit",
        "delete",
        "getGoodsSpecificationAction",
        "goods_id"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/order.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nconst moment = require('moment');\nconst _ = require('lodash');\n// const Jushuitan = require('jushuitan');\nmodule.exports = class extends Base {\n    /**\n     * index action\n     * @return {Promise} []\n     */\n    async indexAction() {\n        const page = this.get('page') || 1;\n        const size = this.get('size') || 10;\n        const orderSn = this.get('orderSn') || '';\n        const consignee = this.get('consignee') || '';\n        const logistic_code = this.get('logistic_code') || '';\n        const status = this.get('status') || '';\n        let data = {}\n        const model = this.model('order');\n        if (logistic_code == '') {\n            data = await model.where({\n                order_sn: ['like', `%${orderSn}%`],\n                consignee: ['like', `%${consignee}%`],\n                order_status: ['IN', status],\n                order_type: ['<', 7],\n            }).order(['id DESC']).page(page, size).countSelect();\n            console.log(data);\n        } else {\n            let orderData = await this.model('order_express').where({\n                logistic_code: logistic_code\n            }).find();\n            let order_id = orderData.order_id;\n            data = await model.where({\n                id: order_id\n            }).order(['id DESC']).page(page, size).countSelect();\n        }\n        for (const item of data.data) {\n            item.goodsList = await this.model('order_goods').field('goods_name,goods_aka,list_pic_url,number,goods_specifition_name_value,retail_price').where({\n                order_id: item.id,\n                is_delete: 0\n            }).select();\n            item.goodsCount = 0;\n            item.goodsList.forEach(v => {\n                item.goodsCount += v.number;\n            });\n            let user = await this.model('user').where({\n                id: item.user_id\n            }).field('nickname,name,mobile,avatar').find();\n            if (!think.isEmpty(user)) {\n                user.nickname = Buffer.from(user.nickname, 'base64').toString();\n            } else {\n                user.nickname = '已删除'\n            }\n            item.userInfo = user;\n            let province_name = await this.model('region').where({\n                id: item.province\n            }).getField('name', true);\n            let city_name = await this.model('region').where({\n                id: item.city\n            }).getField('name', true);\n            let district_name = await this.model('region').where({\n                id: item.district\n            }).getField('name', true);\n            item.full_region = province_name + city_name + district_name;\n            item.postscript = Buffer.from(item.postscript, 'base64').toString();\n            item.add_time = moment.unix(item.add_time).format('YYYY-MM-DD HH:mm:ss');\n            if (item.pay_time != 0) {\n                item.pay_time = moment.unix(item.pay_time).format('YYYY-MM-DD HH:mm:ss');\n            } else {\n                item.pay_time = 0;\n            }\n            item.order_status_text = await this.model('order').getOrderStatusText(item.id);\n            let express = await this.model('order_express').where({\n                order_id: item.id\n            }).find();\n            if (!think.isEmpty(express)) {\n                item.expressInfo = express.shipper_name + express.logistic_code;\n            } else {\n                item.expressInfo = ''\n            }\n            // item.button_text = await this.model('order').getOrderBtnText(item.id);\n        }\n        return this.success(data);\n    }\n    async getAutoStatusAction() {\n        let status = await this.model('settings').where({\n            id: 1\n        }).field('autoDelivery').find();\n        let info = status.autoDelivery;\n        return this.success(info);\n    }\n    async toDeliveryAction() {\n        const page = this.get('page') || 1;\n        const size = this.get('size') || 10;\n        const status = this.get('status') || '';\n        const model = this.model('order');\n        const data = await model.where({\n            order_status: status,\n        }).order(['id DESC']).page(page, size).countSelect();\n        for (const item of data.data) {\n            item.goodsList = await this.model('order_goods').field('goods_name,list_pic_url,number,goods_specifition_name_value,retail_price').where({\n                order_id: item.id\n            }).select();\n            item.goodsCount = 0;\n            item.goodsList.forEach(v => {\n                item.goodsCount += v.number;\n            });\n            let province_name = await this.model('region').where({\n                id: item.province\n            }).getField('name', true);\n            let city_name = await this.model('region').where({\n                id: item.city\n            }).getField('name', true);\n            let district_name = await this.model('region').where({\n                id: item.district\n            }).getField('name', true);\n            item.address = province_name + city_name + district_name + item.address;\n            item.postscript = Buffer.from(item.postscript, 'base64').toString();\n            item.add_time = moment.unix(item.add_time).format('YYYY-MM-DD HH:mm:ss');\n            item.order_status_text = await this.model('order').getOrderStatusText(item.id);\n            item.button_text = await this.model('order').getOrderBtnText(item.id);\n        }\n        return this.success(data);\n    }\n    async saveGoodsListAction() {\n        // console.log(typeof(data));\n        let id = this.post('id');\n        let order_id = this.post('order_id');\n        let number = this.post('number');\n        let price = this.post('retail_price');\n        let addOrMinus = this.post('addOrMinus');\n        let changePrice = Number(number) * Number(price);\n        console.log(order_id);\n        console.log(changePrice);\n        if (addOrMinus == 0) {\n            await this.model('order_goods').where({\n                id: id\n            }).decrement('number', number);\n            await this.model('order').where({\n                id: order_id\n            }).decrement({\n                actual_price: changePrice,\n                order_price: changePrice,\n                goods_price: changePrice\n            });\n            let order_sn = this.model('order').generateOrderNumber();\n            await this.model('order').where({\n                id: order_id\n            }).update({\n                order_sn: order_sn\n            });\n            return this.success(order_sn);\n        } else if (addOrMinus == 1) {\n            await this.model('order_goods').where({\n                id: id\n            }).increment('number', number);\n            await this.model('order').where({\n                id: order_id\n            }).increment({\n                actual_price: changePrice,\n                order_price: changePrice,\n                goods_price: changePrice\n            });\n            let order_sn = this.model('order').generateOrderNumber();\n            await this.model('order').where({\n                id: order_id\n            }).update({\n                order_sn: order_sn\n            });\n            return this.success(order_sn);\n        }\n    }\n    async goodsListDeleteAction() {\n        console.log(this.post('id'));\n        let id = this.post('id');\n        let order_id = this.post('order_id');\n        let number = this.post('number');\n        let price = this.post('retail_price');\n        let addOrMinus = this.post('addOrMinus');\n        let changePrice = Number(number) * Number(price);\n        console.log(order_id);\n        console.log(changePrice);\n        await this.model('order_goods').where({\n            id: id\n        }).update({\n            is_delete: 1\n        });\n        await this.model('order').where({\n            id: order_id\n        }).decrement({\n            actual_price: changePrice,\n            order_price: changePrice,\n            goods_price: changePrice\n        });\n        let order_sn = this.model('order').generateOrderNumber();\n        await this.model('order').where({\n            id: order_id\n        }).update({\n            order_sn: order_sn\n        });\n        return this.success(order_sn);\n    }\n    async saveAdminMemoAction() {\n        const id = this.post('id');\n        const text = this.post('text');\n        const model = this.model('order');\n        let info = {\n            admin_memo: text\n        }\n        let data = await model.where({\n            id: id\n        }).update(info);\n        let orderInfo = await this.model('order').where({\n            id: id\n        }).find();\n        let goods = await this.model('order_goods').where({\n            order_id: id\n        }).field('id,product_id,number,retail_price,list_pic_url').select();\n        let order_goods = [];\n        for (const item of goods) {\n            let product = await this.model('product').where({\n                id: item.product_id\n            }).find();\n            let data = {\n                name: product.goods_name,\n                sku_id: product.goods_sn,\n                amount: item.retail_price,\n                qty: item.number,\n                outer_oi_id: item.id,\n                pic: item.list_pic_url\n            };\n            order_goods.push(data);\n        }\n        return this.success(data);\n    }\n    async savePrintInfoAction() {\n        const id = this.post('id');\n        const print_info = this.post('print_info');\n        const model = this.model('order');\n        let info = {\n            print_info: print_info\n        };\n        let data = await model.where({\n            id: id\n        }).update(info);\n        return this.success(data);\n    }\n    async saveExpressValueInfoAction() {\n        const id = this.post('id');\n        const express_value = this.post('express_value');\n        const model = this.model('order');\n        let info = {\n            express_value: express_value\n        };\n        let data = await model.where({\n            id: id\n        }).update(info);\n        return this.success(data);\n    }\n    async saveRemarkInfoAction() {\n        const id = this.post('id');\n        const remark = this.post('remark');\n        const model = this.model('order');\n        let info = {\n            remark: remark\n        };\n        let data = await model.where({\n            id: id\n        }).update(info);\n        return this.success(data);\n    }\n    async detailAction() {\n        const id = this.get('orderId');\n        const model = this.model('order');\n        let data = await model.where({\n            id: id\n        }).find();\n        data.goodsList = await this.model('order_goods').field('id,product_id,goods_name,goods_aka,list_pic_url,number,goods_specifition_name_value,retail_price,goods_id').where({\n            order_id: data.id,\n            is_delete: 0\n        }).select();\n        data.goodsCount = 0;\n        data.goodsList.forEach(v => {\n            data.goodsCount += v.number;\n        });\n        for (const item of data.goodsList) {\n            let info = await this.model('product').where({\n                id: item.product_id\n            }).field('goods_sn').find();\n            item.goods_sn = info.goods_sn;\n        }\n        console.log(data.goodsList);\n        let userInfo = await this.model('user').where({\n            id: data.user_id\n        }).find();\n        let _nickname = Buffer.from(userInfo.nickname, 'base64').toString();\n        data.user_name = _nickname;\n        data.avatar = userInfo.avatar;\n        let province_name = await this.model('region').where({\n            id: data.province\n        }).getField('name', true);\n        let city_name = await this.model('region').where({\n            id: data.city\n        }).getField('name', true);\n        let district_name = await this.model('region').where({\n            id: data.district\n        }).getField('name', true);\n        data.full_region = province_name + city_name + district_name;\n        data.postscript = Buffer.from(data.postscript, 'base64').toString();\n        data.order_status_text = await this.model('order').getOrderStatusText(data.id);\n        data.add_time = moment.unix(data.add_time).format('YYYY-MM-DD HH:mm:ss');\n        data.allAddress = data.full_region + data.address;\n        if (data.pay_time != 0) {\n            data.pay_time = moment.unix(data.pay_time).format('YYYY-MM-DD HH:mm:ss');\n        }\n        if (data.shipping_time != 0) {\n            data.shipping_time = moment.unix(data.shipping_time).format('YYYY-MM-DD HH:mm:ss');\n        }\n        if (data.confirm_time != 0) {\n            data.confirm_time = moment.unix(data.confirm_time).format('YYYY-MM-DD HH:mm:ss');\n        }\n        if (data.dealdone_time != 0) {\n            data.dealdone_time = moment.unix(data.dealdone_time).format('YYYY-MM-DD HH:mm:ss');\n        }\n        let def = await this.model('settings').where({\n            id: 1\n        }).find();\n        let senderInfo = {}\n        let receiveInfo = {}\n        receiveInfo = {\n            name: data.consignee,\n            mobile: data.mobile,\n            province: province_name,\n            province_id: data.province,\n            city: city_name,\n            city_id: data.city,\n            district: district_name,\n            district_id: data.district,\n            address: data.address\n        }\n        senderInfo = {\n            name: def.Name,\n            mobile: def.Tel,\n            province: def.ProvinceName,\n            city: def.CityName,\n            district: def.ExpAreaName,\n            province_id: def.province_id,\n            city_id: def.city_id,\n            district_id: def.district_id,\n            address: def.Address,\n        }\n        return this.success({\n            orderInfo: data,\n            receiver: receiveInfo,\n            sender: senderInfo\n        });\n    }\n    async getAllRegionAction() { // 我写的算法\n        const model = this.model('region');\n        const aData = await model.where({\n            type: 1\n        }).select();\n        const bData = await model.where({\n            type: 2\n        }).select();\n        const cData = await model.where({\n            type: 3\n        }).select();\n        let newData = [];\n        for (const item of aData) {\n            let children = [];\n            for (const bitem of bData) {\n                let innerChildren = [];\n                for (const citem of cData) {\n                    if (citem.parent_id == bitem.id) {\n                        innerChildren.push({\n                            value: citem.id,\n                            label: citem.name\n                        })\n                    }\n                }\n                if (bitem.parent_id == item.id) {\n                    children.push({\n                        value: bitem.id,\n                        label: bitem.name,\n                        children: innerChildren\n                    })\n                }\n            }\n            newData.push({\n                value: item.id,\n                label: item.name,\n                children: children\n            });\n        }\n        return this.success(newData);\n    }\n    async orderpackAction() {\n        const id = this.get('orderId');\n        const model = this.model('order');\n        const data = await model.where({\n            id: id\n        }).update({\n            order_status: 300\n        });\n    }\n    async orderReceiveAction() {\n        const id = this.get('orderId');\n        let currentTime = parseInt(new Date().getTime() / 1000);\n        const model = this.model('order');\n        const data = await model.where({\n            id: id\n        }).update({\n            order_status: 302,\n            shipping_time: currentTime\n        });\n    }\n    async orderPriceAction() {\n        const id = this.get('orderId');\n        const goodsPrice = this.get('goodsPrice');\n        const freightPrice = this.get('freightPrice');\n        const actualPrice = this.get('actualPrice');\n        const model = this.model('order');\n        const data = await model.where({\n            id: id\n        }).find();\n        let newData = {\n            actual_price: actualPrice,\n            freight_price: freightPrice,\n            goods_price: goodsPrice,\n            order_sn: model.generateOrderNumber()\n        }\n        await model.where({\n            id: id\n        }).update(newData);\n    }\n    async getOrderExpressAction() {\n        const orderId = this.post('orderId');\n        const latestExpressInfo = await this.model('order_express').getLatestOrderExpressByAli(orderId);\n        return this.success(latestExpressInfo);\n    }\n    async getPrintTestAction() {\n        const latestExpressInfo = await this.model('order_express').printExpress();\n        return this.success(latestExpressInfo);\n    }\n    async getMianExpressAction() {\n        const orderId = this.post('orderId');\n        const sender = this.post('sender');\n        const receiver = this.post('receiver');\n        console.log(orderId);\n        console.log(sender);\n        console.log(receiver);\n        let senderOptions = sender.senderOptions;\n        let receiveOptions = receiver.receiveOptions;\n        let senderInfo = {\n            Name: sender.name,\n            Tel: sender.mobile,\n            ProvinceName: await this.model('region').where({\n                id: senderOptions[0]\n            }).getField('name', true),\n            CityName: await this.model('region').where({\n                id: senderOptions[1]\n            }).getField('name', true),\n            ExpAreaName: await this.model('region').where({\n                id: senderOptions[2]\n            }).getField('name', true),\n            Address: sender.address\n        };\n        let receiverInfo = {\n            Name: receiver.name,\n            Tel: receiver.mobile,\n            ProvinceName: await this.model('region').where({\n                id: receiveOptions[0]\n            }).getField('name', true),\n            CityName: await this.model('region').where({\n                id: receiveOptions[1]\n            }).getField('name', true),\n            ExpAreaName: await this.model('region').where({\n                id: receiveOptions[2]\n            }).getField('name', true),\n            Address: receiver.address\n        };\n        // 每次重新生成一次订单号，这样，不会出现已经下过单的情况了。\n        const expressType = this.post('expressType');\n        const latestExpressInfo = await this.model('order_express').getMianExpress(orderId, senderInfo, receiverInfo, expressType);\n        console.log('lastExpressInfo++++++++++++++++++++++');\n        console.log(latestExpressInfo);\n        if (latestExpressInfo.ResultCode == 100) {\n            // 获取快递单号成功，然后存入order_express中\n            this.orderExpressAdd(latestExpressInfo, orderId)\n        }\n        return this.success({\n            latestExpressInfo: latestExpressInfo,\n            sender: senderInfo,\n            receiver: receiverInfo\n        });\n    }\n    async rePrintExpressAction() {\n        const date = new Date();\n        let orderId = this.get('orderId')\n        let order_sn = date.getFullYear() + _.padStart(date.getMonth(), 2, '0') + _.padStart(date.getDay(), 2, '0') + _.padStart(date.getHours(), 2, '0') + _.padStart(date.getMinutes(), 2, '0') + _.padStart(date.getSeconds(), 2, '0') + _.random(100000, 999999);\n        let info = await this.model('order').where({\n            id: orderId\n        }).update({\n            order_sn: order_sn\n        });\n        return this.success(info);\n    }\n    async directPrintExpressAction() {\n        let orderId = this.get('orderId')\n        let express = await this.model('order_express').where({\n            order_id: orderId\n        }).find();\n        let info = {};\n        if (express.express_type < 4) {\n            info = await this.model('shipper').where({\n                code: 'SF'\n            }).find();\n        } else {\n            info = await this.model('shipper').where({\n                code: 'YTO'\n            }).find();\n        }\n        express.MonthCode = info.MonthCode;\n        express.send_time = moment.unix(express.add_time).format('YYYY-MM-DD');\n        return this.success(express);\n    }\n    async orderExpressAdd(ele, orderId) {\n        let currentTime = parseInt(new Date().getTime() / 1000);\n        let info = await this.model('order_express').where({\n            order_id: orderId\n        }).find();\n        if (think.isEmpty(info)) {\n            let orderInfo = ele.Order;\n            let ShipperCode = orderInfo.ShipperCode;\n            let logistic_code = orderInfo.LogisticCode;\n            let expressType = ele.expressType;\n            let region_code = orderInfo.DestinatioCode;\n            if (expressType == 4) {\n                region_code = orderInfo.MarkDestination;\n            }\n            const model = this.model('order');\n            let kdInfo = await this.model('shipper').where({\n                code: ShipperCode\n            }).find();\n            let kdData = {\n                order_id: orderId,\n                shipper_id: kdInfo.id,\n                shipper_name: kdInfo.name,\n                shipper_code: ShipperCode,\n                logistic_code: logistic_code,\n                region_code: region_code,\n                express_type: expressType,\n                add_time: currentTime\n            };\n            await this.model('order_express').add(kdData);\n        } else {\n            let orderInfo = ele.Order;\n            await this.model('order_express').where({\n                order_id: orderId\n            }).update({\n                logistic_code: orderInfo.LogisticCode\n            });\n        }\n        // 如果生成快递单号了。然后又最后没有使用，又去生成快递单号，那么应该重新生成下订单号，用新订单号去生成快递单号，然后update掉旧的order_express\n    }\n    // 点击打印并发货按钮后，就将订单的状态改成已发货\n    async goDeliveryAction() {\n        let orderId = this.post('order_id');\n        let currentTime = parseInt(new Date().getTime() / 1000);\n        let updateData = {\n            order_status: 301,\n            print_status: 1,\n            shipping_status: 1,\n            shipping_time: currentTime\n        };\n        let data = await this.model('order').where({\n            id: orderId\n        }).update(updateData);\n        // 发送服务消息\n        let orderInfo = await this.model('order').where({\n            id: orderId\n        }).field('user_id').find();\n        let formInfo = await this.model('formid').where({\n            order_id: orderId\n        }).find();\n        let formId = formInfo.form_id;\n        let user = await this.model('user').where({\n            id: orderInfo.user_id\n        }).find();\n        let openId = user.weixin_openid;\n        // 物品名称\n        // 快递单号\n        // 快递公司\n        // 发货时间\n        // 温馨提示\n        let goodsInfo = await this.model('order_goods').where({\n            order_id: orderId\n        }).field('goods_name').select();\n        let express = await this.model('order_express').where({\n            order_id: orderId\n        }).find();\n        // 物品名称\n        let goodsName = '';\n        if (goodsInfo.length == 1) {\n            goodsName = goodsInfo[0].goods_name\n        } else {\n            goodsName = goodsInfo[0].goods_name + '等' + goodsInfo.length + '件商品'\n        }\n        // 支付时间\n        let shippingTime = moment.unix(currentTime).format('YYYY-MM-DD HH:mm:ss');\n        // 订单金额\n\t\t// 订阅消息 请先在微信小程序的官方后台设置好订阅消息模板，然后根据自己的data的字段信息，设置好data\n        let TEMPLATE_ID = 'w6AMCJ0FI2LqjCjWPIrpnVWTsFgnlNlmCf9TTDmG6_U'\n        let message = {\n            \"touser\": openId,\n            \"template_id\": TEMPLATE_ID,\n            \"page\": '/pages/ucenter/index/index',\n            \"miniprogram_state\":\"formal\",\n            \"lang\":\"zh_CN\",\n            \"data\": {\n              \"thing7\": {\n                  \"value\": goodsName\n              },\n              \"date2\": {\n                  \"value\": shippingTime\n              },\n              \"name3\": {\n                  \"value\": express.shipper_name\n              },\n              \"character_string4\": {\n                  \"value\": express.logistic_code\n              } ,\n              \"thing9\": {\n                  \"value\": '签收前请检查包裹！'\n              }\n          }\n        }\n        const tokenServer = think.service('weixin', 'api');\n        const token = await tokenServer.getAccessToken();\n        const res = await tokenServer.sendMessage(token,message);\n        return this.success();\n    }\n    async goPrintOnlyAction() {\n        let orderId = this.post('order_id');\n        let updateData = {\n            print_status: 1\n        };\n        let data = await this.model('order').where({\n            id: orderId\n        }).update(updateData);\n        return this.success(data);\n    }\n    async orderDeliveryAction() {\n        const orderId = this.get('orderId');\n        const method = this.get('method');\n        const deliveryId = this.get('shipper') || 0;\n        const logistic_code = this.get('logistic_code') || 0;\n        const model = this.model('order');\n        let currentTime = parseInt(new Date().getTime() / 1000);\n        let expressName = '';\n        if (method == 2) {\n            let ele = await this.model('order_express').where({\n                order_id: orderId\n            }).find();\n            if (think.isEmpty(ele)) {\n                let kdInfo = await this.model('shipper').where({\n                    id: deliveryId\n                }).find();\n                expressName = kdInfo.name;\n                let kdData = {\n                    order_id: orderId,\n                    shipper_id: deliveryId,\n                    shipper_name: kdInfo.name,\n                    shipper_code: kdInfo.code,\n                    logistic_code: logistic_code,\n                    add_time: currentTime\n                };\n                await this.model('order_express').add(kdData);\n                let updateData = {\n                    order_status: 301,\n                    shipping_status: 1,\n                    shipping_time: currentTime\n                };\n                await this.model('order').where({\n                    id: orderId\n                }).update(updateData);\n                // 发送服务消息\n            } else {\n                let kdInfo = await this.model('shipper').where({\n                    id: deliveryId\n                }).find();\n                expressName = kdInfo.name;\n                let kdData = {\n                    order_id: orderId,\n                    shipper_id: deliveryId,\n                    shipper_name: kdInfo.name,\n                    shipper_code: kdInfo.code,\n                    logistic_code: logistic_code,\n                    add_time: currentTime\n                }\n                await this.model('order_express').where({\n                    order_id: orderId\n                }).update(kdData);\n            }\n        } else if (method == 3) {\n            let updateData = {\n                order_status: 301,\n                shipping_time: currentTime\n            };\n            await this.model('order').where({\n                id: orderId\n            }).update(updateData);\n            expressName = '自提件';\n        }\n        let orderInfo = await this.model('order').where({\n            id: orderId\n        }).field('user_id').find();\n        let formInfo = await this.model('formid').where({\n            order_id: orderId\n        }).find();\n        let formId = formInfo.form_id;\n        let user = await this.model('user').where({\n            id: orderInfo.user_id\n        }).find();\n        let openId = user.weixin_openid;\n        // 物品名称\n        // 快递单号\n        // 快递公司\n        // 发货时间\n        // 温馨提示\n        let goodsInfo = await this.model('order_goods').where({\n            order_id: orderId\n        }).field('goods_name').select();\n        // 物品名称\n        let goodsName = '';\n        if (goodsInfo.length == 1) {\n            goodsName = goodsInfo[0].goods_name\n        } else {\n            goodsName = goodsInfo[0].goods_name + '等' + goodsInfo.length + '件商品'\n        }\n        // 支付时间\n        let shippingTime = moment.unix(currentTime).format('YYYY-MM-DD HH:mm:ss');\n        // 订单金额\n\t\t// 订阅消息 请先在微信小程序的官方后台设置好订阅消息模板，然后根据自己的data的字段信息，设置好data\n        let TEMPLATE_ID = 'w6AMCJ0FI2LqjCjWPIrpnVWTsFgnlNlmCf9TTDmG6_U'\n        let message = {\n            \"touser\": openId,\n            \"template_id\": TEMPLATE_ID,\n            \"page\": '/pages/ucenter/index/index',\n            \"miniprogram_state\":\"formal\",\n            \"lang\":\"zh_CN\",\n            \"data\": {\n              \"thing7\": {\n                  \"value\": goodsName\n              },\n              \"date2\": {\n                  \"value\": shippingTime\n              },\n              \"name3\": {\n                  \"value\": expressName\n              },\n              \"character_string4\": {\n                  \"value\": logistic_code\n              } ,\n              \"thing9\": {\n                  \"value\": '签收前请检查包裹！'\n              }\n          }\n        }\n        const tokenServer = think.service('weixin', 'api');\n        const token = await tokenServer.getAccessToken();\n        const res = await tokenServer.sendMessage(token,message);\n    }\n    async checkExpressAction() {\n        const id = this.get('orderId');\n        let info = await this.model('order_express').where({\n            order_id: id\n        }).find();\n        if (!think.isEmpty(info)) {\n            return this.success(info);\n        } else {\n            return this.fail(100, '没找到');\n        }\n    }\n    async saveAddressAction() {\n        const sn = this.post('order_sn');\n        const name = this.post('name');\n        const mobile = this.post('mobile');\n        const cAddress = this.post('cAddress');\n        const addOptions = this.post('addOptions');\n        const province = addOptions[0];\n        const city = addOptions[1];\n        const district = addOptions[2];\n        let info = {\n            consignee: name,\n            mobile: mobile,\n            address: cAddress,\n            province: province,\n            city: city,\n            district: district\n        }\n        const model = this.model('order');\n        const data = await model.where({\n            order_sn: sn\n        }).update(info);\n        return this.success(data);\n    }\n    async storeAction() {\n        if (!this.isPost) {\n            return false;\n        }\n        const values = this.post();\n        const id = this.post('id');\n        const model = this.model('order');\n        values.is_show = values.is_show ? 1 : 0;\n        values.is_new = values.is_new ? 1 : 0;\n        if (id > 0) {\n            await model.where({\n                id: id\n            }).update(values);\n        } else {\n            delete values.id;\n            await model.add(values);\n        }\n        return this.success(values);\n    }\n    async changeStatusAction() {\n        const orderSn = this.post('orderSn');\n        const value = this.post('status');\n        const info = await this.model('order').where({\n            order_sn: orderSn\n        }).update({\n            order_status: value\n        });\n        return this.success(info);\n    }\n    async destoryAction() {\n        const id = this.post('id');\n        await this.model('order').where({\n            id: id\n        }).limit(1).delete();\n        // 删除订单商品\n        await this.model('order_goods').where({\n            order_id: id\n        }).delete();\n        // TODO 事务，验证订单是否可删除（只有失效的订单才可以删除）\n        return this.success();\n    }\n    async getGoodsSpecificationAction() {\n        const goods_id = this.post('goods_id');\n        let data = await this.model('goods_specification').where({\n            goods_id: goods_id,\n            is_delete: 0\n        }).field('id,value').select();\n        return this.success(data);\n    }\n};"
    ]
}