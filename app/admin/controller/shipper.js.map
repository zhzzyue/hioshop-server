{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/shipper.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "indexAction",
        "model",
        "info",
        "where",
        "enabled",
        "select",
        "set",
        "id",
        "find",
        "data",
        "success",
        "listAction",
        "page",
        "get",
        "size",
        "name",
        "order",
        "countSelect",
        "infoAction",
        "storeAction",
        "isPost",
        "values",
        "post",
        "update",
        "add",
        "destoryAction",
        "limit",
        "delete",
        "freightAction",
        "is_delete",
        "getareadataAction",
        "all",
        "type",
        "field",
        "freightdetailAction",
        "template_id",
        "area",
        "item",
        "free_by_money",
        "freeByMoney",
        "free_by_number",
        "freeByNumber",
        "areaData",
        "split",
        "getField",
        "areaName",
        "join",
        "defaultData",
        "freight",
        "saveTableAction",
        "def",
        "idInfo",
        "push",
        "length",
        "deleData",
        "is_default",
        "ele",
        "group_id",
        "dbTable",
        "val",
        "start",
        "start_fee",
        "add_fee",
        "arr",
        "e",
        "think",
        "isEmpty",
        "substring",
        "groupId",
        "areaArr",
        "upData",
        "tempData",
        "package_price",
        "freight_type",
        "addTableAction",
        "temp_id",
        "exceptareaAction",
        "exceptAreaDeleteAction",
        "except_area_id",
        "exceptAreaDetailAction",
        "console",
        "log",
        "saveExceptAreaAction",
        "table",
        "content",
        "addExceptAreaAction"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/shipper.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n    /**\n     * index action\n     * @return {Promise} []\n     */\n\n\n    async indexAction() {\n        const model = this.model('shipper');\n        const info = await model.where({\n            enabled: 1\n        }).select();\n        const set = await this.model('settings').where({id:1}).find();\n        let data = {\n            info:info,\n            set:set\n        }\n\n        return this.success(data);\n    }\n\n    async listAction() {\n\n        const page = this.get('page') || 1;\n        const size = this.get('size') || 10;\n        const name = this.get('name') || '';\n        const model = this.model('shipper');\n        const data = await model.where({\n            name: ['like', `%${name}%`]\n        }).order(['id ASC']).page(page, size).countSelect();\n        return this.success(data);\n    }\n\n    async infoAction() {\n        const id = this.get('id');\n        const model = this.model('shipper');\n        const data = await model.where({\n            id: id\n        }).find();\n        return this.success(data);\n    }\n\n    async storeAction() {\n        if (!this.isPost) {\n            return false;\n        }\n\n        const values = this.post();\n        const id = this.post('id');\n\n        const model = this.model('shipper');\n        if (id > 0) {\n            await model.where({id: id}).update(values);\n        } else {\n            delete values.id;\n            await model.add(values);\n        }\n        return this.success(values);\n    }\n\n\n    async destoryAction() {\n        const id = this.post('id');\n        await this.model('freight_template').where({id: id}).limit(1).delete();\n        // TODO 删除图片\n        return this.success();\n    }\n\n    async freightAction() {\n        const model = this.model('freight_template');\n        const data = await model.where({\n            is_delete: 0\n        }).select();\n        return this.success(data);\n    }\n\n    async getareadataAction() {\n        let all = await this.model('region').where({type: 1}).field('id,name').select();\n        return this.success(all);\n    }\n\n\n    async freightdetailAction() {\n        let id = this.post('id');\n\n        const model = this.model('freight_template_group');\n        let data = await model.where({\n            template_id: id,\n            is_delete: 0,\n            area: ['<>', 0]\n        }).select();\n\n        for (const item of data) {\n            let area = item.area;\n            if (item.free_by_money > 0) {\n                item.freeByMoney = false\n            }\n            if (item.free_by_number > 0) {\n                item.freeByNumber = false\n            }\n            let areaData = area.split(',');\n            let info = await this.model('region').where({id: ['IN', areaData]}).getField('name');\n            item.areaName = info.join(',');\n        }\n\n        let defaultData = await model.where({\n            template_id: id,\n            area: 0,\n            is_delete: 0\n        }).select();\n\n        let freight = await this.model('freight_template').where({id: id}).find();\n\n        let info = {\n            freight: freight,\n            data: data,\n            defaultData: defaultData\n        };\n\n        return this.success(info);\n    }\n\n\n    async saveTableAction() {\n        let data = this.post('table');\n        let def = this.post('defaultData');\n        let info = this.post('info');\n        let idInfo = []; // 是已存在的id。如果大于零，则去循环。等于零，则先将已存在的data删除，然后判断，1，data的length > 0.则，说明有新的数据\n        for (const item of data) {\n            if (item.id > 0) {\n                idInfo.push(item.id);\n            }\n        }\n\n        if (idInfo.length != 0) {\n            let deleData = await this.model('freight_template_group').where({\n                id: ['NOTIN', idInfo],\n                template_id: info.id,\n                is_default: 0,\n                is_delete: 0\n            }).getField('id');\n\n            for (const ele of deleData) {\n                await this.model('freight_template_detail').where({\n                    template_id: info.id,\n                    group_id: ele,\n                    is_delete: 0\n                }).update({is_delete: 1});\n            }\n\n            let dbTable = await this.model('freight_template_group').where({\n                id: ['NOTIN', idInfo],\n                template_id: info.id,\n                is_default: 0,\n                is_delete: 0\n            }).update({is_delete: 1});\n\n            for (const item of data) {\n                let id = item.id; // 这个是group_id\n                if (id > 0) {\n\n                    let template_id = info.id;\n\n                    let val = {\n                        area: item.area,\n                        start: item.start,\n                        start_fee: item.start_fee,\n                        add: item.add,\n                        add_fee: item.add_fee,\n                        free_by_money: item.free_by_money,\n                        free_by_number: item.free_by_number\n                    };\n                    await this.model('freight_template_group').where({\n                        id: id,\n                        template_id: template_id,\n                        is_delete: 0\n                    }).update(val);\n\n                    // 这里要根据area去notin更新\n\n\n                    let area = item.area;\n                    let arr = area.split(',');\n\n                    await this.model('freight_template_detail').where({\n                        area: ['NOTIN', arr],\n                        template_id: template_id,\n                        group_id: id\n                    }).update({is_delete: 1});\n                    for (const item of arr) {\n                        let e = await this.model('freight_template_detail').where({\n                            template_id: template_id,\n                            area: item,\n                            group_id: id\n                        }).find();\n                        if (think.isEmpty(e)) {\n                            await this.model('freight_template_detail').add({\n                                template_id: template_id,\n                                group_id: id,\n                                area: item\n                            });\n                        }\n                    }\n                }\n                else {\n                    let template_id = info.id;\n                    let area = item.area.substring(2);\n                    let val = {\n                        area: area,\n                        start: item.start,\n                        start_fee: item.start_fee,\n                        add: item.add,\n                        add_fee: item.add_fee,\n                        template_id: template_id,\n                        free_by_money: item.free_by_money,\n                        free_by_number: item.free_by_number\n                    };\n                    let groupId = await this.model('freight_template_group').add(val);\n                    let areaArr = area.split(',');\n                    for (const item of areaArr) {\n                        await this.model('freight_template_detail').add({\n                            template_id: template_id,\n                            group_id: groupId,\n                            area: item\n                        });\n                    }\n                }\n            }\n        }\n        else {\n            // 这里前台将table全删除了，所以要将原先的数据都删除\n            let dbTable = await this.model('freight_template_group').where({\n                template_id: info.id,\n                is_default: 0,\n                is_delete: 0\n            }).update({is_delete: 1});\n            // 将detail表也要删除！！！\n\n            if (data.length != 0) {\n                for (const item of data) {\n                    let area = item.area.substring(2);\n                    let template_id = info.id;\n                    let val = {\n                        area: area,\n                        start: item.start,\n                        start_fee: item.start_fee,\n                        add: item.add,\n                        add_fee: item.add_fee,\n                        template_id: template_id,\n                        free_by_money: item.free_by_money,\n                        free_by_number: item.free_by_number\n                    };\n                    let groupId = await this.model('freight_template_group').add(val);\n                    //根据area 去循环一下另一张detail表\n                    let areaArr = area.split(',');\n                    for (const item of areaArr) {\n                        await this.model('freight_template_detail').add({\n                            template_id: template_id,\n                            group_id: groupId,\n                            area: item\n                        });\n                    }\n\n                }\n            }\n        }\n\n        let upData = {\n            start: def[0].start,\n            start_fee: def[0].start_fee,\n            add: def[0].add,\n            add_fee: def[0].add_fee,\n            free_by_money: def[0].free_by_money,\n            free_by_number: def[0].free_by_number\n        };\n\n        await this.model('freight_template_group').where({\n            id: def[0].id,\n            template_id: info.id,\n            is_default: 1\n        }).update(upData);\n\n        // await this.model('freight_template_detail').where({\n        //     group_id: def[0].id,\n        //     template_id: info.id,\n        // }).update(upData);\n\n\n        let tempData = {\n            name: info.name,\n            package_price: info.package_price,\n            freight_type: info.freight_type\n        };\n\n        await this.model('freight_template').where({id: info.id}).update(tempData);\n        return this.success();\n    }\n\n    async addTableAction() {\n        let info = this.post('info');\n        let data = this.post('table');\n        let def = this.post('defaultData');\n        // return false;\n        let temp_id = await this.model('freight_template').add(info);\n\n        if (temp_id > 0) {\n            let upData = {\n                start: def[0].start,\n                start_fee: def[0].start_fee,\n                add: def[0].add,\n                add_fee: def[0].add_fee,\n                free_by_money: def[0].free_by_money,\n                free_by_number: def[0].free_by_number,\n                template_id: temp_id,\n                is_default: 1\n            };\n\n            let groupId = await this.model('freight_template_group').add(upData);\n            if (groupId > 0) {\n                await this.model('freight_template_detail').add({\n                    template_id: temp_id,\n                    group_id: groupId,\n                    area: 0\n                });\n            }\n\n            if (data.length > 0) {\n                for (const item of data) {\n                    let area = item.area.substring(2);\n                    let template_id = temp_id;\n                    let info = {\n                        area: area,\n                        start: item.start,\n                        start_fee: item.start_fee,\n                        add: item.add,\n                        add_fee: item.add_fee,\n                        template_id: temp_id,\n                        free_by_money: item.free_by_money,\n                        free_by_number: item.free_by_number\n                    };\n                    let groupId = await this.model('freight_template_group').add(info);\n                    let areaArr = area.split(',');\n                    for (const item of areaArr) {\n                        await this.model('freight_template_detail').add({\n                            template_id: template_id,\n                            group_id: groupId,\n                            area: item\n                        });\n                    }\n                }\n            }\n        }\n\n        return this.success();\n    }\n\n    async exceptareaAction() {\n        const model = this.model('except_area');\n        const data = await model.where({\n            is_delete: 0\n        }).select();\n\n        for (const item of data) {\n            let area = item.area;\n            let areaData = area.split(',');\n            let info = await this.model('region').where({id: ['IN', areaData]}).getField('name');\n            item.areaName = info.join(',');\n        }\n\n        return this.success(data);\n    }\n\n    async exceptAreaDeleteAction() {\n        const id = this.post('id');\n        await this.model('except_area').where({id: id}).limit(1).update({is_delete: 1});\n        await this.model('except_area_detail').where({except_area_id: id}).update({is_delete: 1});\n        // TODO 删除图片\n        return this.success();\n    }\n\n\n    async exceptAreaDetailAction() {\n        let id = this.post('id');\n        const model = this.model('except_area');\n        let data = await model.where({\n            id: id,\n            is_delete: 0,\n        }).find();\n        // let areaData = {}\n        let area = data.area;\n        let areaData = area.split(',');\n        let info = await this.model('region').where({id: ['IN', areaData]}).getField('name');\n        data.areaName = info.join(',');\n        console.log(data);\n        return this.success(data);\n    }\n\n    async saveExceptAreaAction() {\n        let table = this.post('table');\n        let info = this.post('info');\n        console.log('--------------------------')\n\n        console.log(table)\n        console.log(info)\n        let data = {\n            area: table[0].area,\n            content: info.content\n        };\n        await this.model('except_area').where({id: info.id}).update(data);\n\n        let area = table[0].area;\n\n        console.log(typeof(area));\n\n        let arr = area.split(',');\n\n        await this.model('except_area_detail').where({\n            area: ['NOTIN', arr],\n            except_area_id: info.id,\n            is_delete: 0\n        }).update({is_delete: 1});\n\n        for (const item of arr) {\n            let e = await this.model('except_area_detail').where({\n                except_area_id: info.id,\n                area: item,\n                is_delete: 0\n            }).find();\n\n            if (think.isEmpty(e)) {\n                await this.model('except_area_detail').add({\n                    except_area_id: info.id,\n                    area: item\n                });\n            }\n        }\n        return this.success();\n    }\n\n    async addExceptAreaAction() {\n        let table = this.post('table');\n        let info = this.post('info');\n\n        let data = {\n            area: table[0].area.substring(2),\n            content: info.content\n        };\n\n        let id = await this.model('except_area').add(data);\n\n        let area = table[0].area.substring(2);\n\n        let arr = area.split(',');\n\n        for (const item of arr) {\n            await this.model('except_area_detail').add({\n                except_area_id: id,\n                area: item\n            });\n        }\n        return this.success();\n    }\n\n\n};\n"
    ]
}