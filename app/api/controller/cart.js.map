{
    "version": 3,
    "sources": [
        "../../../src/api/controller/cart.js"
    ],
    "names": [
        "Base",
        "require",
        "moment",
        "pinyin",
        "module",
        "exports",
        "getCart",
        "type",
        "cartList",
        "model",
        "where",
        "user_id",
        "think",
        "userId",
        "is_delete",
        "is_fast",
        "select",
        "goodsCount",
        "goodsAmount",
        "checkedGoodsCount",
        "checkedGoodsAmount",
        "numberChange",
        "cartItem",
        "product",
        "id",
        "product_id",
        "find",
        "isEmpty",
        "update",
        "retail_price",
        "productNum",
        "goods_number",
        "checked",
        "number",
        "Number",
        "info",
        "goods_id",
        "field",
        "list_pic_url",
        "weight_count",
        "goods_weight",
        "add_price",
        "cAmount",
        "toFixed",
        "aAmount",
        "cartTotal",
        "indexAction",
        "success",
        "addAgain",
        "goodsId",
        "productId",
        "currentTime",
        "parseInt",
        "Date",
        "getTime",
        "goodsInfo",
        "is_on_sale",
        "fail",
        "productInfo",
        "cartInfo",
        "goodsSepcifitionValue",
        "goods_specification_ids",
        "split",
        "getField",
        "cartData",
        "goods_sn",
        "goods_name",
        "name",
        "goods_aka",
        "freight_template_id",
        "goods_specifition_name_value",
        "join",
        "goods_specifition_ids",
        "add_time",
        "add",
        "addAction",
        "post",
        "addType",
        "increment",
        "updateAction",
        "checkedAction",
        "toString",
        "isChecked",
        "deleteAction",
        "goodsCountAction",
        "checkoutAction",
        "orderFrom",
        "get",
        "addressId",
        "goodsMoney",
        "freightPrice",
        "outStock",
        "getAgainCart",
        "checkedGoodsList",
        "filter",
        "v",
        "item",
        "againGoods",
        "order_id",
        "againGoodsCount",
        "checkedAddress",
        "is_default",
        "province_id",
        "cartGoods",
        "freightTempArray",
        "freightData",
        "money",
        "freight_type",
        "province_name",
        "getRegionName",
        "city_name",
        "city_id",
        "district_name",
        "district_id",
        "full_region",
        "ex",
        "template_id",
        "area",
        "freight_price",
        "groupData",
        "group_id",
        "free_by_number",
        "free_by_money",
        "templateInfo",
        "start",
        "start_fee",
        "add_fee",
        "goodsTotalPrice",
        "orderTotalPrice",
        "def",
        "actualPrice",
        "num"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/cart.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nconst moment = require('moment');\nconst pinyin = require(\"pinyin\");\nmodule.exports = class extends Base {\n    async getCart(type) {\n        let cartList = [];\n        if(type == 0){\n            cartList = await this.model('cart').where({\n                user_id: think.userId,\n                is_delete: 0,\n                is_fast: 0,\n            }).select();\n        }\n        else{\n            cartList = await this.model('cart').where({\n                user_id: think.userId,\n                is_delete: 0,\n                is_fast: 1\n            }).select();\n        }\n        // 获取购物车统计信息\n        let goodsCount = 0;\n        let goodsAmount = 0;\n        let checkedGoodsCount = 0;\n        let checkedGoodsAmount = 0;\n        let numberChange = 0;\n        for (const cartItem of cartList) {\n            let product = await this.model('product').where({\n                id: cartItem.product_id,\n                is_delete: 0\n            }).find();\n            if (think.isEmpty(product)) {\n                await this.model('cart').where({\n                    product_id: cartItem.product_id,\n                    user_id: think.userId,\n                    is_delete: 0,\n                }).update({\n                    is_delete: 1\n                });\n            } else {\n                let retail_price = product.retail_price;\n                let productNum = product.goods_number;\n                if (productNum <= 0) {\n                    await this.model('cart').where({\n                        product_id: cartItem.product_id,\n                        user_id: think.userId,\n                        checked: 1,\n                        is_delete: 0,\n                    }).update({\n                        checked: 0\n                    });\n                    cartItem.number = 0;\n                } else if (productNum > 0 && productNum < cartItem.number) {\n                    cartItem.number = productNum;\n                    numberChange = 1;\n                } else if (productNum > 0 && cartItem.number == 0) {\n                    cartItem.number = 1;\n                    numberChange = 1;\n                }\n                goodsCount += cartItem.number;\n                goodsAmount += cartItem.number * retail_price;\n                cartItem.retail_price = retail_price;\n                if (!think.isEmpty(cartItem.checked && productNum > 0)) {\n                    checkedGoodsCount += cartItem.number;\n                    checkedGoodsAmount += cartItem.number * Number(retail_price);\n                }\n                // 查找商品的图片\n                let info = await this.model('goods').where({\n                    id: cartItem.goods_id\n                }).field('list_pic_url').find();\n                cartItem.list_pic_url = info.list_pic_url;\n                cartItem.weight_count = cartItem.number * Number(cartItem.goods_weight);\n                await this.model('cart').where({\n                    product_id: cartItem.product_id,\n                    user_id: think.userId,\n                    is_delete: 0,\n                }).update({\n                    number: cartItem.number,\n                    add_price:retail_price\n                })\n            }\n        }\n        let cAmount = checkedGoodsAmount.toFixed(2);\n        let aAmount = checkedGoodsAmount;\n        return {\n            cartList: cartList,\n            cartTotal: {\n                goodsCount: goodsCount,\n                goodsAmount: goodsAmount.toFixed(2),\n                checkedGoodsCount: checkedGoodsCount,\n                checkedGoodsAmount: cAmount,\n                user_id: think.userId,\n                numberChange: numberChange\n            }\n        };\n    }\n    /**\n     * 获取购物车信息，所有对购物车的增删改操作，都要重新返回购物车的信息\n     * @return {Promise} []\n     */\n    async indexAction() {\n        return this.success(await this.getCart(0));\n    }\n    async addAgain(goodsId, productId, number) {\n        const currentTime = parseInt(new Date().getTime() / 1000);\n        const goodsInfo = await this.model('goods').where({\n            id: goodsId\n        }).find();\n        if (think.isEmpty(goodsInfo) || goodsInfo.is_on_sale == 0) {\n            return this.fail(400, '商品已下架');\n        }\n        // 取得规格的信息,判断规格库存\n        // const productInfo = await this.model('product').where({goods_id: goodsId, id: productId}).find();\n        const productInfo = await this.model('product').where({\n            id: productId\n        }).find();\n        // let productId = productInfo.id;\n        if (think.isEmpty(productInfo) || productInfo.goods_number < number) {\n            return this.fail(400, '库存不足');\n        }\n        // 判断购物车中是否存在此规格商品\n        const cartInfo = await this.model('cart').where({\n            user_id: think.userId,\n            product_id: productId,\n            is_delete: 0\n        }).find();\n        let retail_price = productInfo.retail_price;\n        if (think.isEmpty(cartInfo)) {\n            // 添加操作\n            // 添加规格名和值\n            let goodsSepcifitionValue = [];\n            if (!think.isEmpty(productInfo.goods_specification_ids)) {\n                goodsSepcifitionValue = await this.model('goods_specification').where({\n                    goods_id: productInfo.goods_id,\n                    is_delete: 0,\n                    id: {\n                        'in': productInfo.goods_specification_ids.split('_')\n                    }\n                }).getField('value');\n            }\n            // 添加到购物车\n            const cartData = {\n                goods_id: productInfo.goods_id,\n                product_id: productId,\n                goods_sn: productInfo.goods_sn,\n                goods_name: goodsInfo.name,\n                goods_aka: productInfo.goods_name,\n                goods_weight: productInfo.goods_weight,\n                freight_template_id: goodsInfo.freight_template_id,\n                list_pic_url: goodsInfo.list_pic_url,\n                number: number,\n                user_id: think.userId,\n                retail_price: retail_price,\n                add_price: retail_price,\n                goods_specifition_name_value: goodsSepcifitionValue.join(';'),\n                goods_specifition_ids: productInfo.goods_specification_ids,\n                checked: 1,\n                add_time: currentTime\n            };\n            await this.model('cart').add(cartData);\n        } else {\n            // 如果已经存在购物车中，则数量增加\n            if (productInfo.goods_number < (number + cartInfo.number)) {\n                return this.fail(400, '库存都不够啦');\n            }\n            await this.model('cart').where({\n                user_id: think.userId,\n                product_id: productId,\n                is_delete: 0,\n                id: cartInfo.id\n            }).update({\n                retail_price: retail_price,\n                checked: 1,\n                number: number\n            });\n        }\n    }\n    /**\n     * 添加商品到购物车\n     * @returns {Promise.<*>}\n     */\n    async addAction() {\n        const goodsId = this.post('goodsId');\n        const productId = this.post('productId');\n        const number = this.post('number');\n        const addType = this.post('addType');\n        const currentTime = parseInt(new Date().getTime() / 1000);\n        // 判断商品是否可以购买\n        const goodsInfo = await this.model('goods').where({\n            id: goodsId\n        }).find();\n        if (think.isEmpty(goodsInfo) || goodsInfo.is_on_sale == 0) {\n            return this.fail(400, '商品已下架');\n        }\n        // 取得规格的信息,判断规格库存\n        // const productInfo = await this.model('product').where({goods_id: goodsId, id: productId}).find();\n        const productInfo = await this.model('product').where({\n            id: productId\n        }).find();\n        // let productId = productInfo.id;\n        if (think.isEmpty(productInfo) || productInfo.goods_number < number) {\n            return this.fail(400, '库存不足');\n        }\n        // 判断购物车中是否存在此规格商品\n        const cartInfo = await this.model('cart').where({\n            user_id: think.userId,\n            product_id: productId,\n            is_delete: 0\n        }).find();\n        let retail_price = productInfo.retail_price;\n        if (addType == 1) {\n            await this.model('cart').where({\n                is_delete: 0,\n                user_id: think.userId\n            }).update({\n                checked: 0\n            });\n            let goodsSepcifitionValue = [];\n            if (!think.isEmpty(productInfo.goods_specification_ids)) {\n                goodsSepcifitionValue = await this.model('goods_specification').where({\n                    goods_id: productInfo.goods_id,\n                    is_delete: 0,\n                    id: {\n                        'in': productInfo.goods_specification_ids.split('_')\n                    }\n                }).getField('value');\n            }\n            // 添加到购物车\n            const cartData = {\n                goods_id: productInfo.goods_id,\n                product_id: productId,\n                goods_sn: productInfo.goods_sn,\n                goods_name: goodsInfo.name,\n                goods_aka: productInfo.goods_name,\n                goods_weight: productInfo.goods_weight,\n                freight_template_id: goodsInfo.freight_template_id,\n                list_pic_url: goodsInfo.list_pic_url,\n                number: number,\n                user_id: think.userId,\n                retail_price: retail_price,\n                add_price: retail_price,\n                goods_specifition_name_value: goodsSepcifitionValue.join(';'),\n                goods_specifition_ids: productInfo.goods_specification_ids,\n                checked: 1,\n                add_time: currentTime,\n                is_fast: 1\n            };\n            await this.model('cart').add(cartData);\n            return this.success(await this.getCart(1));\n        } else {\n            if (think.isEmpty(cartInfo)) {\n                // 添加操作\n                // 添加规格名和值\n                let goodsSepcifitionValue = [];\n                if (!think.isEmpty(productInfo.goods_specification_ids)) {\n                    goodsSepcifitionValue = await this.model('goods_specification').where({\n                        goods_id: productInfo.goods_id,\n                        is_delete: 0,\n                        id: {\n                            'in': productInfo.goods_specification_ids.split('_')\n                        }\n                    }).getField('value');\n                }\n                // 添加到购物车\n                const cartData = {\n                    goods_id: productInfo.goods_id,\n                    product_id: productId,\n                    goods_sn: productInfo.goods_sn,\n                    goods_name: goodsInfo.name,\n                    goods_aka: productInfo.goods_name,\n                    goods_weight: productInfo.goods_weight,\n                    freight_template_id: goodsInfo.freight_template_id,\n                    list_pic_url: goodsInfo.list_pic_url,\n                    number: number,\n                    user_id: think.userId,\n                    retail_price: retail_price,\n                    add_price: retail_price,\n                    goods_specifition_name_value: goodsSepcifitionValue.join(';'),\n                    goods_specifition_ids: productInfo.goods_specification_ids,\n                    checked: 1,\n                    add_time: currentTime\n                };\n                await this.model('cart').add(cartData);\n            } else {\n                // 如果已经存在购物车中，则数量增加\n                if (productInfo.goods_number < (number + cartInfo.number)) {\n                    return this.fail(400, '库存都不够啦');\n                }\n                await this.model('cart').where({\n                    user_id: think.userId,\n                    product_id: productId,\n                    is_delete: 0,\n                    id: cartInfo.id\n                }).update({\n                    retail_price: retail_price\n                });\n                await this.model('cart').where({\n                    user_id: think.userId,\n                    product_id: productId,\n                    is_delete: 0,\n                    id: cartInfo.id\n                }).increment('number', number);\n            }\n            return this.success(await this.getCart(0));\n        }\n    }\n    // 更新指定的购物车信息\n    async updateAction() {\n        const productId = this.post('productId'); // 新的product_id\n        const id = this.post('id'); // cart.id\n        const number = parseInt(this.post('number')); // 不是\n        // 取得规格的信息,判断规格库存\n        const productInfo = await this.model('product').where({\n            id: productId,\n            is_delete: 0,\n        }).find();\n        if (think.isEmpty(productInfo) || productInfo.goods_number < number) {\n            return this.fail(400, '库存不足');\n        }\n        // 判断是否已经存在product_id购物车商品\n        const cartInfo = await this.model('cart').where({\n            id: id,\n            is_delete: 0\n        }).find();\n        // 只是更新number\n        if (cartInfo.product_id === productId) {\n            await this.model('cart').where({\n                id: id,\n                is_delete: 0\n            }).update({\n                number: number\n            });\n            return this.success(await this.getCart(0));\n        }\n    }\n    // 是否选择商品，如果已经选择，则取消选择，批量操作\n    async checkedAction() {\n        let productId = this.post('productIds').toString();\n        const isChecked = this.post('isChecked');\n        if (think.isEmpty(productId)) {\n            return this.fail('删除出错');\n        }\n        productId = productId.split(',');\n        await this.model('cart').where({\n            product_id: {\n                'in': productId\n            },\n            user_id: think.userId,\n            is_delete: 0\n        }).update({\n            checked: parseInt(isChecked)\n        });\n        return this.success(await this.getCart(0));\n    }\n    // 删除选中的购物车商品，批量删除\n    async deleteAction() {\n        let productId = this.post('productIds');\n        if (think.isEmpty(productId)) {\n            return this.fail('删除出错');\n        }\n        await this.model('cart').where({\n            product_id: productId,\n            user_id: think.userId,\n            is_delete: 0\n        }).update({\n            is_delete: 1\n        });\n        return this.success(await this.getCart(0));\n        // return this.success(productId);\n    }\n    // 获取购物车商品的总件件数\n    async goodsCountAction() {\n        const cartData = await this.getCart(0);\n        await this.model('cart').where({\n            user_id: think.userId,\n            is_delete: 0,\n            is_fast: 1\n        }).update({\n            is_delete: 1\n        });\n        return this.success({\n            cartTotal: {\n                goodsCount: cartData.cartTotal.goodsCount\n            }\n        });\n    }\n    /**\n     * 订单提交前的检验和填写相关订单信息\n     * @returns {Promise.<void>}\n     */\n    async checkoutAction() {\n        const currentTime = parseInt(new Date().getTime() / 1000);\n        let orderFrom = this.get('orderFrom');\n        const type = this.get('type'); // 是否团购\n        const addressId = this.get('addressId'); // 收货地址id\n        const addType = this.get('addType');\n        let goodsCount = 0; // 购物车的数量\n        let goodsMoney = 0; // 购物车的总价\n        let freightPrice = 0;\n        let outStock = 0;\n        let cartData = '';\n        // 获取要购买的商品\n        if (type == 0) {\n            if (addType == 0) {\n                cartData = await this.getCart(0);\n            } else if (addType == 1) {\n                cartData = await this.getCart(1);\n            } else if (addType == 2) {\n                cartData = await this.getAgainCart(orderFrom);\n            }\n        }\n        const checkedGoodsList = cartData.cartList.filter(function(v) {\n            return v.checked === 1;\n        });\n        for (const item of checkedGoodsList) {\n            goodsCount = goodsCount + item.number;\n            goodsMoney = goodsMoney + item.number * item.retail_price;\n            let product = await this.model('product').where({\n                id: item.product_id\n            }).find();\n            if (product.goods_number <= 0 || product.is_on_sale == 0) {\n                outStock = Number(outStock) + 1;\n            }\n        }\n        if (addType == 2) {\n            let againGoods = await this.model('order_goods').where({\n                order_id: orderFrom\n            }).select();\n            let againGoodsCount = 0;\n            for (const item of againGoods) {\n                againGoodsCount = againGoodsCount + item.number;\n            }\n            if (goodsCount != againGoodsCount) {\n                outStock = 1;\n            }\n        }\n        // 选择的收货地址\n        let checkedAddress = null;\n        if (addressId == '' || addressId == 0) {\n            checkedAddress = await this.model('address').where({\n                is_default: 1,\n                user_id: think.userId,\n\t\t\t\tis_delete:0\n            }).find();\n        } else {\n            checkedAddress = await this.model('address').where({\n                id: addressId,\n                user_id: think.userId,\n\t\t\t\tis_delete:0\n            }).find();\n        }\n        if (!think.isEmpty(checkedAddress)) {\n            // 运费开始\n            // 先将促销规则中符合满件包邮或者满金额包邮的规则找到；\n            // 先看看是不是属于偏远地区。\n            let province_id = checkedAddress.province_id;\n            // 得到数组了，然后去判断这两个商品符不符合要求\n            // 先用这个goods数组去遍历\n            let cartGoods = checkedGoodsList;\n            let freightTempArray = await this.model('freight_template').where({\n                is_delete: 0\n            }).select();\n            let freightData = [];\n            for (const item in freightTempArray) {\n                freightData[item] = {\n                    id: freightTempArray[item].id,\n                    number: 0,\n                    money: 0,\n                    goods_weight: 0,\n                    freight_type: freightTempArray[item].freight_type\n                }\n            }\n            // 按件计算和按重量计算的区别是：按件，只要算goods_number就可以了，按重量要goods_number*goods_weight\n            // checkedGoodsList = [{goods_id:1,number5},{goods_id:2,number:3},{goods_id:3,number:2}]\n            for (const item of freightData) {\n                for (const cartItem of cartGoods) {\n                    if (item.id == cartItem.freight_template_id) {\n                        // 这个在判断，购物车中的商品是否属于这个运费模版，如果是，则加一，但是，这里要先判断下，这个商品是否符合满件包邮或满金额包邮，如果是包邮的，那么要去掉\n                        item.number = item.number + cartItem.number;\n                        item.money = item.money + cartItem.number * cartItem.retail_price;\n                        item.goods_weight = item.goods_weight + cartItem.number * cartItem.goods_weight;\n                    }\n                }\n            }\n            checkedAddress.province_name = await this.model('region').getRegionName(checkedAddress.province_id);\n            checkedAddress.city_name = await this.model('region').getRegionName(checkedAddress.city_id);\n            checkedAddress.district_name = await this.model('region').getRegionName(checkedAddress.district_id);\n            checkedAddress.full_region = checkedAddress.province_name + checkedAddress.city_name + checkedAddress.district_name;\n            for (const item of freightData) {\n                if (item.number == 0) {\n                    continue;\n                }\n                let ex = await this.model('freight_template_detail').where({\n                    template_id: item.id,\n                    area: province_id,\n                    is_delete: 0,\n                }).find();\n                let freight_price = 0;\n                if (!think.isEmpty(ex)) {\n                    // console.log('第一层：非默认邮费算法');\n                    let groupData = await this.model('freight_template_group').where({\n                        id: ex.group_id\n                    }).find();\n                    // 不为空，说明有模板，那么应用模板，先去判断是否符合指定的包邮条件，不满足，那么根据type 是按件还是按重量\n                    let free_by_number = groupData.free_by_number;\n                    let free_by_money = groupData.free_by_money;\n                    // 4种情况，1、free_by_number > 0  2,free_by_money > 0  3,free_by_number free_by_money > 0,4都等于0\n                    let templateInfo = await this.model('freight_template').where({\n                        id: item.id,\n                        is_delete: 0,\n                    }).find();\n                    let freight_type = templateInfo.freight_type;\n                    if (freight_type == 0) {\n                        if (item.number > groupData.start) { // 说明大于首件了\n                            freight_price = groupData.start * groupData.start_fee + (item.number - 1) * groupData.add_fee; // todo 如果续件是2怎么办？？？\n                        } else {\n                            freight_price = groupData.start * groupData.start_fee;\n                        }\n                    } else if (freight_type == 1) {\n                        if (item.goods_weight > groupData.start) { // 说明大于首件了\n                            freight_price = groupData.start * groupData.start_fee + (item.goods_weight - 1) * groupData.add_fee; // todo 如果续件是2怎么办？？？\n                        } else {\n                            freight_price = groupData.start * groupData.start_fee;\n                        }\n                    }\n                    if (free_by_number > 0) {\n                        if (item.number >= free_by_number) {\n                            freight_price = 0;\n                        }\n                    }\n                    if (free_by_money > 0) {\n                        if (item.money >= free_by_money) {\n                            freight_price = 0;\n                        }\n                    }\n                } else {\n                    // console.log('第二层：使用默认的邮费算法');\n                    let groupData = await this.model('freight_template_group').where({\n                        template_id: item.id,\n                        area: 0\n                    }).find();\n                    let free_by_number = groupData.free_by_number;\n                    let free_by_money = groupData.free_by_money;\n                    let templateInfo = await this.model('freight_template').where({\n                        id: item.id,\n                        is_delete: 0,\n                    }).find();\n                    let freight_type = templateInfo.freight_type;\n                    if (freight_type == 0) {\n                        if (item.number > groupData.start) { // 说明大于首件了\n                            freight_price = groupData.start * groupData.start_fee + (item.number - 1) * groupData.add_fee; // todo 如果续件是2怎么办？？？\n                        } else {\n                            freight_price = groupData.start * groupData.start_fee;\n                        }\n                    } else if (freight_type == 1) {\n                        if (item.goods_weight > groupData.start) { // 说明大于首件了\n                            freight_price = groupData.start * groupData.start_fee + (item.goods_weight - 1) * groupData.add_fee; // todo 如果续件是2怎么办？？？\n                        } else {\n                            freight_price = groupData.start * groupData.start_fee;\n                        }\n                    }\n                    if (free_by_number > 0) {\n                        if (item.number >= free_by_number) {\n                            freight_price = 0;\n                        }\n                    }\n                    if (free_by_money > 0) {\n                        if (item.money >= free_by_money) {\n                            freight_price = 0;\n                        }\n                    }\n                }\n\t\t\t\tfreightPrice = freightPrice > freight_price?freightPrice:freight_price\n                // freightPrice = freightPrice + freight_price;\n                // 会得到 几个数组，然后用省id去遍历在哪个数组\n            }\n        } else {\n            checkedAddress = 0;\n        }\n        // 计算订单的费用\n        let goodsTotalPrice = cartData.cartTotal.checkedGoodsAmount; // 商品总价\n        // 获取是否有可用红包\n        let money = cartData.cartTotal.checkedGoodsAmount;\n        let orderTotalPrice = 0;\n        let def = await this.model('settings').where({\n            id: 1\n        }).find();\n        orderTotalPrice = Number(money) + Number(freightPrice) // 订单的总价\n        const actualPrice = orderTotalPrice; // 减去其它支付的金额后，要实际支付的金额\n        let numberChange = cartData.cartTotal.numberChange;\n        return this.success({\n            checkedAddress: checkedAddress,\n            freightPrice: freightPrice,\n            checkedGoodsList: checkedGoodsList,\n            goodsTotalPrice: goodsTotalPrice,\n            orderTotalPrice: orderTotalPrice.toFixed(2),\n            actualPrice: actualPrice.toFixed(2),\n            goodsCount: goodsCount,\n            outStock: outStock,\n            numberChange: numberChange,\n        });\n    }\n    async getAgainCart(orderFrom) {\n        const againGoods = await this.model('order_goods').where({\n            order_id: orderFrom\n        }).select();\n        await this.model('cart').where({\n            is_delete: 0,\n            user_id: think.userId\n        }).update({\n            checked: 0\n        });\n        for (const item of againGoods) {\n            await this.addAgain(item.goods_id, item.product_id, item.number);\n        }\n        const cartList = await this.model('cart').where({\n            user_id: think.userId,\n            is_fast: 0,\n            is_delete: 0\n        }).select();\n        // 获取购物车统计信息\n        let goodsCount = 0;\n        let goodsAmount = 0;\n        let checkedGoodsCount = 0;\n        let checkedGoodsAmount = 0;\n        for (const cartItem of cartList) {\n            goodsCount += cartItem.number;\n            goodsAmount += cartItem.number * cartItem.retail_price;\n            if (!think.isEmpty(cartItem.checked)) {\n                checkedGoodsCount += cartItem.number;\n                checkedGoodsAmount += cartItem.number * Number(cartItem.retail_price);\n            }\n            // 查找商品的图片\n            let info = await this.model('goods').where({\n                id: cartItem.goods_id\n            }).field('list_pic_url,goods_number,goods_unit').find();\n            // cartItem.list_pic_url = await this.model('goods').where({id: cartItem.goods_id}).getField('list_pic_url', true);\n            let num = info.goods_number;\n            if (num <= 0) {\n                await this.model('cart').where({\n                    product_id: cartItem.product_id,\n                    user_id: think.userId,\n                    checked: 1,\n                    is_delete: 0,\n                }).update({\n                    checked: 0\n                });\n            }\n            cartItem.list_pic_url = info.list_pic_url;\n            cartItem.goods_number = info.goods_number;\n            cartItem.weight_count = cartItem.number * Number(cartItem.goods_weight);\n        }\n        let cAmount = checkedGoodsAmount.toFixed(2);\n        let aAmount = checkedGoodsAmount;\n        return {\n            cartList: cartList,\n            cartTotal: {\n                goodsCount: goodsCount,\n                goodsAmount: goodsAmount.toFixed(2),\n                checkedGoodsCount: checkedGoodsCount,\n                checkedGoodsAmount: cAmount,\n                user_id: think.userId\n            }\n        };\n    }\n};"
    ]
}